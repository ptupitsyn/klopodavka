<Button x:Class="KlopViewWpf.KlopCell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:KlopViewWpf="clr-namespace:KlopViewWpf" xmlns:KlopIfaces="clr-namespace:KlopIfaces;assembly=KlopIfaces" xmlns:System="clr-namespace:System;assembly=mscorlib">
    <Button.Resources>
        <KlopViewWpf:ColorToKlopBrushConverter x:Key="_colorToKlopBrushConverter" />
        <SolidColorBrush Color="Gray" Opacity="0.2" x:Key="availableBrush" />
    </Button.Resources>
    <Button.Style>
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding State}" Value="{x:Static KlopIfaces:ECellState.Free}">
                    <Setter Property="Foreground" Value="Transparent">
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding State}" Value="{x:Static KlopIfaces:ECellState.Base}">
                    <Setter Property="Foreground" Value="{Binding Owner.Color, Converter={StaticResource _colorToKlopBrushConverter}}" />
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="{Binding Owner.Color}" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding State}" Value="{x:Static KlopIfaces:ECellState.Alive}">
                    <Setter Property="Foreground" Value="{Binding Owner.Color, Converter={StaticResource _colorToKlopBrushConverter}}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding State}" Value="{x:Static KlopIfaces:ECellState.Dead}">
                    <Setter Property="Foreground" Value="{Binding Owner.Color, Converter={StaticResource _colorToKlopBrushConverter}, ConverterParameter=True}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Available}" Value="True">
                    <Setter Property="Background" Value="{StaticResource availableBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Button.Style>
    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border Background="{TemplateBinding Background}" >
                <Border Background="{TemplateBinding Foreground}" >
                    <ContentPresenter Content="{TemplateBinding Content}" />
                </Border>
            </Border>
        </ControlTemplate>
    </Button.Template>
    <!--<StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding X}" />
                    <TextBlock Text="," />
                    <TextBlock Text="{Binding Y}" />
                </StackPanel>
                <TextBlock Text="{Binding State}" />
                <TextBlock Text="{Binding Owner.Color}" />
    </StackPanel>-->
</Button>
